openapi: 3.1.0
info:
  title: Slides Add-on Backend API
  version: 1.0.0
  description: HTTP API for PDF upload, job orchestration, and results retrieval.
servers:
  - url: https://us-central1-{projectId}.cloudfunctions.net/api
    variables:
      projectId:
        default: qualtir-45587
paths:
  /public/health:
    get:
      summary: Public health check
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                required: [ok]
  /v1/uploads/signed-url:
    post:
      summary: Create a signed URL for direct PDF upload to GCS
      description: |
        Secured with HMAC headers. Returns V4 signed URL and metadata.
      security:
        - HmacAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSignedUrlRequest'
      responses:
        '200':
          description: Signed URL response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignedUrlResponse'
        '4XX': { description: Client error }
        '5XX': { description: Server error }
  /v1/jobs:
    post:
      summary: Create processing job for an uploaded PDF
      description: Publishes to Pub/Sub; worker processes PDF and writes result.json
      security:
        - HmacAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateJobRequest'
      responses:
        '200':
          description: Job created
          content:
            application/json:
              schema:
                type: object
                properties:
                  jobId: { type: string }
                required: [jobId]
        '4XX': { description: Client error }
        '5XX': { description: Server error }
  /v1/jobs/{jobId}:
    get:
      summary: Get job status/result
      description: When status is done, a signed URL to result.json is included
      security:
        - HmacAuth: []
      parameters:
        - in: path
          name: jobId
          required: true
          schema: { type: string }
      responses:
        '200':
          description: Job status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobStatusResponse'
        '404': { description: Not found }
        '4XX': { description: Client error }
        '5XX': { description: Server error }
components:
  securitySchemes:
    HmacAuth:
      type: apiKey
      in: header
      name: X-Signature
      description: |
        Custom HMAC SHA-256 signature over canonical string:
        METHOD\nPATH\nX-Timestamp\nBODY\nX-Nonce
        Additional required headers: X-Timestamp (ms), X-Nonce (UUID). Secret rotation with X-Key-Id supported.
  schemas:
    CreateSignedUrlRequest:
      type: object
      additionalProperties: false
      required: [fileName, contentType, contentLength, contentSha256]
      properties:
        fileName: { type: string }
        contentType: { type: string, enum: [application/pdf] }
        contentLength: { type: integer, minimum: 1 }
        contentSha256: { type: string, description: hex-encoded SHA-256 of file }
    SignedUrlResponse:
      type: object
      additionalProperties: false
      required: [uploadId, uploadUrl, headers, expiresAt, limits]
      properties:
        uploadId: { type: string }
        uploadUrl: { type: string, format: uri }
        headers:
          type: object
          additionalProperties: { type: string }
        expiresAt: { type: string, format: date-time }
        limits:
          type: object
          required: [maxBytes, maxPages]
          properties:
            maxBytes: { type: integer }
            maxPages: { type: integer }
    CreateJobRequest:
      type: object
      additionalProperties: false
      required: [uploadId, pdfName]
      properties:
        uploadId: { type: string }
        pdfName: { type: string }
        options:
          type: object
          additionalProperties: false
          properties:
            maxSlides: { type: integer, minimum: 1, maximum: 200 }
            language: { type: string }
            theme: { type: string, enum: [DEFAULT, LIGHT, DARK] }
    JobStatusResponse:
      type: object
      additionalProperties: false
      required: [status]
      properties:
        status: { type: string, enum: [queued, processing, done, error, cancelled] }
        error:
          type: object
          additionalProperties: false
          properties:
            code: { type: string }
            message: { type: string }
        result:
          type: object
          additionalProperties: false
          properties:
            resultJsonUrl: { type: string, format: uri }
    SlidesResult:
      type: object
      additionalProperties: false
      required: [title, theme, slides]
      properties:
        title: { type: string, minLength: 1 }
        theme: { type: string, enum: [DEFAULT] }
        slides:
          type: array
          minItems: 1
          maxItems: 200
          items:
            type: object
            additionalProperties: false
            required: [title]
            properties:
              title: { type: string, minLength: 1 }
              bullets: { type: array, items: { type: string } }
              notes: { type: string }
              layout: { type: string, enum: [TITLE_ONLY, TITLE_AND_BODY, TITLE_AND_TWO_COLUMNS] }
              images:
                type: array
                items:
                  type: object
                  additionalProperties: false
                  required: [url]
                  properties:
                    url: { type: string, format: uri }
                    placement: { type: string, enum: [LEFT, RIGHT, FULL_WIDTH, BACKGROUND] }
                    widthPx: { type: integer, minimum: 0 }
